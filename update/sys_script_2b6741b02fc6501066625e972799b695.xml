<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>true</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_58872_needit_needit">u_requested_forDYNAMIC90d1921e5f510100a9ad2572f2b477fe^EQ<item endquery="false" field="u_requested_for" goto="false" newquery="false" operator="DYNAMIC" or="false" value="90d1921e5f510100a9ad2572f2b477fe"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Businesss Rule Script test</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[    // gs.info("The requester for this record is" + current.u_requested_for.email);

    // gs.addInfoMessage("The requester for this record is" + u_requested_for.employee_number);

    // if (gs.hasRole("admin")) {
    //	gs.addInfoMessage("You're an admin user");

    //  }

    //this is to set mytbl to glidrecord **Glide record sample

    // 	var myTbl = new GlideRecord('x_58872_needit_needit');

    // 	creating query
    // 	myTbl.addQuery('priority','=','1');
    // 	myTbl.addQuery('states','=','3');

    // 	//Perform query	
    // 	myTbl.query();

    // 	//sequential execute condition and falls next by next.
    // 	while(myTbl.next()){

    // 		myTbl.priority=2;
    // 		myTbl.state=1;
    // 		myTbl.update();

    // 	}

    // 	//bulk it to 1 simple command sample instead of multiple query
    // 	myTbl.setValue('priority','2');
    // 	myTbl.updateMultiple();


    //**********************************************************************************************************
   (function executeRule(current, previous /*null when async*/ ) {

    gs.info('This is for test execution purposes');
    try {
        var test = new GlideRecord('x_58872_needit_needit');
        
        test.query();

        while (test.next()) {
			test.state=3;
            test.update();
			
        }

    } catch (err) {
        gs.error('There is an issue! Fix it' + err.message);
        gs.addErrorMessage('There is an issue! Fix it' + err.message);

        // }
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-07-14 06:23:00</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>2b6741b02fc6501066625e972799b695</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Businesss Rule Script test</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_2b6741b02fc6501066625e972799b695</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-07-14 08:30:55</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=2b6741b02fc6501066625e972799b695"/>
</record_update>
